name: Package Publishing

on:
  # Trigger on release creation
  release:
    types: [created]
  
  # Trigger on push to staging or tags
  push:
    branches: [staging]
    tags:
      - 'v*'  # Push events to tags matching v*, i.e. v1.0, v20.15.10
    
  # Manual trigger for other branches
  workflow_dispatch:
    inputs:
      environment:
        description: 'Publishing environment'
        required: true
        default: 'test'
        type: choice
        options:
          - test

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: python -m build
      
    # Always publish to Test PyPI if manually triggered
    - name: Publish to Test PyPI (Manual Trigger)
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --verbose --skip-existing --repository-url https://test.pypi.org/legacy/ dist/*
        
    # Publish to Test PyPI on staging branch push
    - name: Publish to Test PyPI (Staging)
      if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --verbose --skip-existing --repository-url https://test.pypi.org/legacy/ dist/*
        
    # Publish to both Test PyPI and PyPI on release from main or tag push
    - name: Publish to Test PyPI (Release or Tag)
      if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --verbose --skip-existing --repository-url https://test.pypi.org/legacy/ dist/*
        
    - name: Publish to PyPI (Release or Tag)
      if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload --verbose dist/*
        
    - name: Upload artifacts to release
      if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        # Create a release if it's a tag push
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true 